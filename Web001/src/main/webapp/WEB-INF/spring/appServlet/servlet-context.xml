<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!--  
	이전에 우리가 공부한 것처럼 개발자가 객체를 만드는 것이아니라 스프링 프래임워크에 객체를 만들어 줘. 내가 사용할 객체는 이런 정보를 가지고 있어
	정의를 하면 servlet-context.xml이 구동되면서 객체를 만들어서 스프링 프레임워크의 컨테이너라는 공간에 보관합니다 
	개발자는 이 객체를 사용한다. 이것기 바로  IOC개념 컨트롤의 주체가 개발자가 아닌 프레임워크이다.
	
	 이 설정대로 빈을 만든다.  class : 클래스명   property : setter, name: 변수명 value: 저장할 값 -->
	 
	 <!--     24번째 의미를 이해하면 숫자로 눈치게임 시작!! -->
	
	
	<context:component-scan base-package="com.human.test" /> <!--  지정된 패키지 클래스를 스캔하면서 
	어노테이션으로 지정된 것 중에 객체로 생성한 대상을 빈으로 만들어서 컨테이너에 등록시켜라. 
	스캔을 통해서 빈이 만들어 지지 않으면 스프링에서 인식이 불가능하다. -->
	<context:component-scan base-package="com.human.dao" />  <!--  repository 객체를 스캔해라. 
	@Repository  대상을 빈으로 만들어서 컨테이너에 등록시켜라. 
	-->
	<context:component-scan base-package="com.human.service" />
	
	
</beans:beans>
